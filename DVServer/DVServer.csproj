<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{0D7B6B8C-2092-4894-B3A1-F61170086D8C}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <RootNamespace>DVServer</RootNamespace>
    <AssemblyName>DVServer</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;DVSERVER</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;DVSERVER</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="DarkRift">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\lib\DarkRift.dll</HintPath>
    </Reference>
    <Reference Include="DarkRift.Server">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\lib\DarkRift.Server.dll</HintPath>
    </Reference>
    <Reference Include="DV.Logic.Job">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\lib\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\lib\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\lib\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>packages\Newtonsoft.Json.13.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DVServerMain.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ServerManager.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\DVMultiplayerContinued\DVMultiplayerContinued.csproj">
      <Project>{cf3cddf7-aec2-4b54-af12-f8a84e807e3d}</Project>
      <Name>DVMultiplayerContinued</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <PreBuildEvent>
      SET BUILDFOLDER="$(SolutionDir)DVServer\Build"
      if not exist %25BUILDFOLDER%25 (
      mkdir %25BUILDFOLDER%25
      ) else (
      del /S /Q %25BUILDFOLDER%25\*
      if exist %25BUILDFOLDER%25\Resources rd /S /Q %25BUILDFOLDER%25\Resources
      if exist %25BUILDFOLDER%25\Plugins rd /S /Q %25BUILDFOLDER%25\Plugins
      if exist %25BUILDFOLDER%25\Data rd /S /Q %25BUILDFOLDER%25\Data
      if exist %25BUILDFOLDER%25\Logs rd /S /Q %25BUILDFOLDER%25\Logs
      )
      mkdir %25BUILDFOLDER%25\Plugins
    </PreBuildEvent>
    <PostBuildEvent>
      SET BUILDFOLDER="$(SolutionDir)DVServer\Build"
      xcopy "$(TargetDir)*.dll" %25BUILDFOLDER%25 /Y /I
      xcopy "$(TargetDir)*.pdb" %25BUILDFOLDER%25 /Y /I
      xcopy "$(TargetDir)*.exe" %25BUILDFOLDER%25 /Y /I
      xcopy "$(SolutionDir)\Build\Plugins\*Plugin.dll" %25BUILDFOLDER%25\Plugins /Y /I /E
      xcopy "$(SolutionDir)\Build\DVMultiplayerContinued.dll" %25BUILDFOLDER%25 /Y /I /E
      xcopy "$(SolutionDir)DVServer\Resources\Server.config" %25BUILDFOLDER%25\Resources /Y /I /E
  </PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <PreBuildEvent>
      BUILDFOLDER="$(SolutionDir)DVServer/Build"
      if [ -d "$BUILDFOLDER" ]; then
        rm -rf "$BUILDFOLDER"
      fi
      mkdir -p "$BUILDFOLDER/Plugins"
    </PreBuildEvent>
    <PostBuildEvent>
      export BUILDFOLDER="$(SolutionDir)Build"
      cp $(TargetDir)*.dll "$BUILDFOLDER"
      cp $(TargetDir)*.pdb "$BUILDFOLDER"
      cp $(TargetDir)*.exe "$BUILDFOLDER"
      cp $(SolutionDir)/Build/Plugins/*Plugin.dll "$BUILDFOLDER/Plugins"
      cp "$(SolutionDir)/Build/DVMultiplayerContinued.dll" "$BUILDFOLDER"
      cp "$(SolutionDir)/DVServer/Resources/Server.config" "$BUILDFOLDER/Resources"
    </PostBuildEvent>
  </PropertyGroup>
</Project>